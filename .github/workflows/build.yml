name: Build and Test Plugin

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
    steps:
      # Free up disk space
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android /usr/local/android-sdk
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /opt/ghc
          sudo rm -rf ~/.cache
          df -h

      # Checkout the repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Validate Gradle Wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      # Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Set up Gradle environment
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Export properties
      - name: Export Properties
        id: properties
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Build plugin
      - name: Build Plugin
        run: ./gradlew buildPlugin

      # Prepare plugin artifact
      - name: Prepare Plugin Artifact
        id: artifact
        run: |
          cd ${{ github.workspace }}/build/distributions
          FILENAME=$(ls *.zip)
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      # Upload artifact
      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./build/distributions/*.zip

  test:
    name: Test Plugin
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # Free up disk space
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android /usr/local/android-sdk
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /opt/ghc
          sudo rm -rf ~/.cache
          df -h

      # Checkout the repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Set up Gradle environment
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Run tests
      - name: Run Tests
        run: ./gradlew check

      # Upload test reports
      - name: Upload Test Results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./build/reports/tests

  verify:
    name: Verify Plugin
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      # Free up disk space
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android /usr/local/android-sdk
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /opt/ghc
          sudo rm -rf ~/.cache
          df -h

      # Checkout the repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Set up Java environment
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Run plugin verification
      - name: Run Plugin Verification
        run: ./gradlew verifyPlugin

  releaseDraft:
    name: Create Draft Release
    if: github.event_name != 'pull_request'
    needs: [build, test, verify]
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Create a release draft
      - name: Create Release Draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ needs.build.outputs.version }}" \
            --draft \
            --title "v${{ needs.build.outputs.version }}" \
            --notes "${{ needs.build.outputs.changelog }}"
